Q3
会社のマーケティング担当ディレクターから、"何気ない親切" と思われる善行を目にしたら 80 文字で要約して投稿できる モバイルアプリケーションを作成するように依頼されました。できるだけ幅広い種類のスマートフォン、ブラウザ、タブレッ トで動作するよう に、JavaScript でアプリケーションを記述することにしました。投稿された要約を保存するため、アプ リケーションから Amazon DynamoDB にアクセスさせる必要があります。プロトタイプの初期テストでは、使用状況に 大きなスパイクはないことが分かっています。このアプリケーションで最もコスト効率が高く、スケーラブルなアーキテクチ ャとなるのはどの選択肢ですか?

A) EC2 インスタンス上で Security Token Service の Token Vending Machine (TVM)を使用して、 JavaScript クラ イアント に対し一時的な認証情報を提供し、Amazon Identity and Access Management (IAM) ユーザーにマッピ ングされ、DynamoDB の入力および S3 への GET を許可する署名付き認証情報を提供する。ウェブサイトとして有 効にした S3 バケットから モバイルアプリケーションを配信し、クライアントにより DynamoDB が更新される。

B) Amazon、Google、または Facebook のようなウェブ認証プロバイダにアプリケーションを登録し、そのプロバイ ダ用の IAM ロールを作成し、IAM ロールに は S3 への GET および DynamoDB の入力を許可する権限を設定す る。ウェブサイトとして有効にした S3 バケットからモバイルアプリケーションを配信し、クライアントにより DynamoDB が更新される。

C) Security Token Service の Token Vending Machine(TVM)を使用して、JavaScript クライアントに対し一時 的な認証情報を提供し、IAM ユーザーにマッピングされ、DynamoDB の入力を許可する署名付き認証情報を提供 する。負荷分散され、オートスケール設定された Apache EC2 インスタンスからモバイルアプリケーションを配信 する。 EC2 インスタンスは、DynamoDB の入力を許可する IAM ロールを設定し、 サーバーにより DynamoDB が更新される。

D) Amazon、Google、または Facebook のようなウェブ認証プロバイダに JavaScript アプリケーションを登録し、 そのプロバイダ用の IAM ロールを作成し、IAM ロールに DynamoDB の入力を許可する権限を設定する。負荷分 散さ れ、オートスケール設定された Apache EC2 インスタンスからモバイルアプリケーションを配信する。EC2 インスタンスは、DynamoDB の入力を許可する IAM ロールを設定し、サーバーにより DynamoDB が更新され る。
